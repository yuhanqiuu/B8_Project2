0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Wed Apr 03 20:16:35 2024
0000              5   ;--------------------------------------------------------
                  5   $name speaktest
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _delay
0000             28            public _mapFrequencySpeak
0000             29            public _Timer2_ISR
0000             30            public __c51_external_startup
0000             31   ;--------------------------------------------------------
0000             32   ; Special Function Registers
0000             33   ;--------------------------------------------------------
0000             34   _ACC            DATA 0xe0
0000             35   _ADC0ASAH       DATA 0xb6
0000             36   _ADC0ASAL       DATA 0xb5
0000             37   _ADC0ASCF       DATA 0xa1
0000             38   _ADC0ASCT       DATA 0xc7
0000             39   _ADC0CF0        DATA 0xbc
0000             40   _ADC0CF1        DATA 0xb9
0000             41   _ADC0CF2        DATA 0xdf
0000             42   _ADC0CN0        DATA 0xe8
0000             43   _ADC0CN1        DATA 0xb2
0000             44   _ADC0CN2        DATA 0xb3
0000             45   _ADC0GTH        DATA 0xc4
0000             46   _ADC0GTL        DATA 0xc3
0000             47   _ADC0H          DATA 0xbe
0000             48   _ADC0L          DATA 0xbd
0000             49   _ADC0LTH        DATA 0xc6
0000             50   _ADC0LTL        DATA 0xc5
0000             51   _ADC0MX         DATA 0xbb
0000             52   _B              DATA 0xf0
0000             53   _CKCON0         DATA 0x8e
0000             54   _CKCON1         DATA 0xa6
0000             55   _CLEN0          DATA 0xc6
0000             56   _CLIE0          DATA 0xc7
0000             57   _CLIF0          DATA 0xe8
0000             58   _CLKSEL         DATA 0xa9
0000             59   _CLOUT0         DATA 0xd1
0000             60   _CLU0CF         DATA 0xb1
0000             61   _CLU0FN         DATA 0xaf
0000             62   _CLU0MX         DATA 0x84
0000             63   _CLU1CF         DATA 0xb3
0000             64   _CLU1FN         DATA 0xb2
0000             65   _CLU1MX         DATA 0x85
0000             66   _CLU2CF         DATA 0xb6
0000             67   _CLU2FN         DATA 0xb5
0000             68   _CLU2MX         DATA 0x91
0000             69   _CLU3CF         DATA 0xbf
0000             70   _CLU3FN         DATA 0xbe
0000             71   _CLU3MX         DATA 0xae
0000             72   _CMP0CN0        DATA 0x9b
0000             73   _CMP0CN1        DATA 0x99
0000             74   _CMP0MD         DATA 0x9d
0000             75   _CMP0MX         DATA 0x9f
0000             76   _CMP1CN0        DATA 0xbf
0000             77   _CMP1CN1        DATA 0xac
0000             78   _CMP1MD         DATA 0xab
0000             79   _CMP1MX         DATA 0xaa
0000             80   _CRC0CN0        DATA 0xce
0000             81   _CRC0CN1        DATA 0x86
0000             82   _CRC0CNT        DATA 0xd3
0000             83   _CRC0DAT        DATA 0xcb
0000             84   _CRC0FLIP       DATA 0xcf
0000             85   _CRC0IN         DATA 0xca
0000             86   _CRC0ST         DATA 0xd2
0000             87   _DAC0CF0        DATA 0x91
0000             88   _DAC0CF1        DATA 0x92
0000             89   _DAC0H          DATA 0x85
0000             90   _DAC0L          DATA 0x84
0000             91   _DAC1CF0        DATA 0x93
0000             92   _DAC1CF1        DATA 0x94
0000             93   _DAC1H          DATA 0x8a
0000             94   _DAC1L          DATA 0x89
0000             95   _DAC2CF0        DATA 0x95
0000             96   _DAC2CF1        DATA 0x96
0000             97   _DAC2H          DATA 0x8c
0000             98   _DAC2L          DATA 0x8b
0000             99   _DAC3CF0        DATA 0x9a
0000            100   _DAC3CF1        DATA 0x9c
0000            101   _DAC3H          DATA 0x8e
0000            102   _DAC3L          DATA 0x8d
0000            103   _DACGCF0        DATA 0x88
0000            104   _DACGCF1        DATA 0x98
0000            105   _DACGCF2        DATA 0xa2
0000            106   _DERIVID        DATA 0xad
0000            107   _DEVICEID       DATA 0xb5
0000            108   _DPH            DATA 0x83
0000            109   _DPL            DATA 0x82
0000            110   _EIE1           DATA 0xe6
0000            111   _EIE2           DATA 0xf3
0000            112   _EIP1           DATA 0xbb
0000            113   _EIP1H          DATA 0xee
0000            114   _EIP2           DATA 0xed
0000            115   _EIP2H          DATA 0xf6
0000            116   _EMI0CN         DATA 0xe7
0000            117   _FLKEY          DATA 0xb7
0000            118   _HFO0CAL        DATA 0xc7
0000            119   _HFO1CAL        DATA 0xd6
0000            120   _HFOCN          DATA 0xef
0000            121   _I2C0ADM        DATA 0xff
0000            122   _I2C0CN0        DATA 0xba
0000            123   _I2C0DIN        DATA 0xbc
0000            124   _I2C0DOUT       DATA 0xbb
0000            125   _I2C0FCN0       DATA 0xad
0000            126   _I2C0FCN1       DATA 0xab
0000            127   _I2C0FCT        DATA 0xf5
0000            128   _I2C0SLAD       DATA 0xbd
0000            129   _I2C0STAT       DATA 0xb9
0000            130   _IE             DATA 0xa8
0000            131   _IP             DATA 0xb8
0000            132   _IPH            DATA 0xf2
0000            133   _IT01CF         DATA 0xe4
0000            134   _LFO0CN         DATA 0xb1
0000            135   _P0             DATA 0x80
0000            136   _P0MASK         DATA 0xfe
0000            137   _P0MAT          DATA 0xfd
0000            138   _P0MDIN         DATA 0xf1
0000            139   _P0MDOUT        DATA 0xa4
0000            140   _P0SKIP         DATA 0xd4
0000            141   _P1             DATA 0x90
0000            142   _P1MASK         DATA 0xee
0000            143   _P1MAT          DATA 0xed
0000            144   _P1MDIN         DATA 0xf2
0000            145   _P1MDOUT        DATA 0xa5
0000            146   _P1SKIP         DATA 0xd5
0000            147   _P2             DATA 0xa0
0000            148   _P2MASK         DATA 0xfc
0000            149   _P2MAT          DATA 0xfb
0000            150   _P2MDIN         DATA 0xf3
0000            151   _P2MDOUT        DATA 0xa6
0000            152   _P2SKIP         DATA 0xcc
0000            153   _P3             DATA 0xb0
0000            154   _P3MDIN         DATA 0xf4
0000            155   _P3MDOUT        DATA 0x9c
0000            156   _PCA0CENT       DATA 0x9e
0000            157   _PCA0CLR        DATA 0x9c
0000            158   _PCA0CN0        DATA 0xd8
0000            159   _PCA0CPH0       DATA 0xfc
0000            160   _PCA0CPH1       DATA 0xea
0000            161   _PCA0CPH2       DATA 0xec
0000            162   _PCA0CPH3       DATA 0xf5
0000            163   _PCA0CPH4       DATA 0x85
0000            164   _PCA0CPH5       DATA 0xde
0000            165   _PCA0CPL0       DATA 0xfb
0000            166   _PCA0CPL1       DATA 0xe9
0000            167   _PCA0CPL2       DATA 0xeb
0000            168   _PCA0CPL3       DATA 0xf4
0000            169   _PCA0CPL4       DATA 0x84
0000            170   _PCA0CPL5       DATA 0xdd
0000            171   _PCA0CPM0       DATA 0xda
0000            172   _PCA0CPM1       DATA 0xdb
0000            173   _PCA0CPM2       DATA 0xdc
0000            174   _PCA0CPM3       DATA 0xae
0000            175   _PCA0CPM4       DATA 0xaf
0000            176   _PCA0CPM5       DATA 0xcc
0000            177   _PCA0H          DATA 0xfa
0000            178   _PCA0L          DATA 0xf9
0000            179   _PCA0MD         DATA 0xd9
0000            180   _PCA0POL        DATA 0x96
0000            181   _PCA0PWM        DATA 0xf7
0000            182   _PCON0          DATA 0x87
0000            183   _PCON1          DATA 0xcd
0000            184   _PFE0CN         DATA 0xc1
0000            185   _PRTDRV         DATA 0xf6
0000            186   _PSCTL          DATA 0x8f
0000            187   _PSTAT0         DATA 0xaa
0000            188   _PSW            DATA 0xd0
0000            189   _REF0CN         DATA 0xd1
0000            190   _REG0CN         DATA 0xc9
0000            191   _REVID          DATA 0xb6
0000            192   _RSTSRC         DATA 0xef
0000            193   _SBCON1         DATA 0x94
0000            194   _SBRLH1         DATA 0x96
0000            195   _SBRLL1         DATA 0x95
0000            196   _SBUF           DATA 0x99
0000            197   _SBUF0          DATA 0x99
0000            198   _SBUF1          DATA 0x92
0000            199   _SCON           DATA 0x98
0000            200   _SCON0          DATA 0x98
0000            201   _SCON1          DATA 0xc8
0000            202   _SFRPAGE        DATA 0xa7
0000            203   _SFRPGCN        DATA 0xbc
0000            204   _SFRSTACK       DATA 0xd7
0000            205   _SMB0ADM        DATA 0xd6
0000            206   _SMB0ADR        DATA 0xd7
0000            207   _SMB0CF         DATA 0xc1
0000            208   _SMB0CN0        DATA 0xc0
0000            209   _SMB0DAT        DATA 0xc2
0000            210   _SMB0FCN0       DATA 0xc3
0000            211   _SMB0FCN1       DATA 0xc4
0000            212   _SMB0FCT        DATA 0xef
0000            213   _SMB0RXLN       DATA 0xc5
0000            214   _SMB0TC         DATA 0xac
0000            215   _SMOD1          DATA 0x93
0000            216   _SP             DATA 0x81
0000            217   _SPI0CFG        DATA 0xa1
0000            218   _SPI0CKR        DATA 0xa2
0000            219   _SPI0CN0        DATA 0xf8
0000            220   _SPI0DAT        DATA 0xa3
0000            221   _SPI0FCN0       DATA 0x9a
0000            222   _SPI0FCN1       DATA 0x9b
0000            223   _SPI0FCT        DATA 0xf7
0000            224   _SPI0PCF        DATA 0xdf
0000            225   _TCON           DATA 0x88
0000            226   _TH0            DATA 0x8c
0000            227   _TH1            DATA 0x8d
0000            228   _TL0            DATA 0x8a
0000            229   _TL1            DATA 0x8b
0000            230   _TMOD           DATA 0x89
0000            231   _TMR2CN0        DATA 0xc8
0000            232   _TMR2CN1        DATA 0xfd
0000            233   _TMR2H          DATA 0xcf
0000            234   _TMR2L          DATA 0xce
0000            235   _TMR2RLH        DATA 0xcb
0000            236   _TMR2RLL        DATA 0xca
0000            237   _TMR3CN0        DATA 0x91
0000            238   _TMR3CN1        DATA 0xfe
0000            239   _TMR3H          DATA 0x95
0000            240   _TMR3L          DATA 0x94
0000            241   _TMR3RLH        DATA 0x93
0000            242   _TMR3RLL        DATA 0x92
0000            243   _TMR4CN0        DATA 0x98
0000            244   _TMR4CN1        DATA 0xff
0000            245   _TMR4H          DATA 0xa5
0000            246   _TMR4L          DATA 0xa4
0000            247   _TMR4RLH        DATA 0xa3
0000            248   _TMR4RLL        DATA 0xa2
0000            249   _TMR5CN0        DATA 0xc0
0000            250   _TMR5CN1        DATA 0xf1
0000            251   _TMR5H          DATA 0xd5
0000            252   _TMR5L          DATA 0xd4
0000            253   _TMR5RLH        DATA 0xd3
0000            254   _TMR5RLL        DATA 0xd2
0000            255   _UART0PCF       DATA 0xd9
0000            256   _UART1FCN0      DATA 0x9d
0000            257   _UART1FCN1      DATA 0xd8
0000            258   _UART1FCT       DATA 0xfa
0000            259   _UART1LIN       DATA 0x9e
0000            260   _UART1PCF       DATA 0xda
0000            261   _VDM0CN         DATA 0xff
0000            262   _WDTCN          DATA 0x97
0000            263   _XBR0           DATA 0xe1
0000            264   _XBR1           DATA 0xe2
0000            265   _XBR2           DATA 0xe3
0000            266   _XOSC0CN        DATA 0x86
0000            267   _DPTR           DATA 0x8382
0000            268   _TMR2RL         DATA 0xcbca
0000            269   _TMR3RL         DATA 0x9392
0000            270   _TMR4RL         DATA 0xa3a2
0000            271   _TMR5RL         DATA 0xd3d2
0000            272   _TMR0           DATA 0x8c8a
0000            273   _TMR1           DATA 0x8d8b
0000            274   _TMR2           DATA 0xcfce
0000            275   _TMR3           DATA 0x9594
0000            276   _TMR4           DATA 0xa5a4
0000            277   _TMR5           DATA 0xd5d4
0000            278   _SBRL1          DATA 0x9695
0000            279   _PCA0           DATA 0xfaf9
0000            280   _PCA0CP0        DATA 0xfcfb
0000            281   _PCA0CP1        DATA 0xeae9
0000            282   _PCA0CP2        DATA 0xeceb
0000            283   _PCA0CP3        DATA 0xf5f4
0000            284   _PCA0CP4        DATA 0x8584
0000            285   _PCA0CP5        DATA 0xdedd
0000            286   _ADC0ASA        DATA 0xb6b5
0000            287   _ADC0GT         DATA 0xc4c3
0000            288   _ADC0           DATA 0xbebd
0000            289   _ADC0LT         DATA 0xc6c5
0000            290   _DAC0           DATA 0x8584
0000            291   _DAC1           DATA 0x8a89
0000            292   _DAC2           DATA 0x8c8b
0000            293   _DAC3           DATA 0x8e8d
0000            294   ;--------------------------------------------------------
0000            295   ; special function bits
0000            296   ;--------------------------------------------------------
0000            297   _ACC_0          BIT 0xe0
0000            298   _ACC_1          BIT 0xe1
0000            299   _ACC_2          BIT 0xe2
0000            300   _ACC_3          BIT 0xe3
0000            301   _ACC_4          BIT 0xe4
0000            302   _ACC_5          BIT 0xe5
0000            303   _ACC_6          BIT 0xe6
0000            304   _ACC_7          BIT 0xe7
0000            305   _TEMPE          BIT 0xe8
0000            306   _ADGN0          BIT 0xe9
0000            307   _ADGN1          BIT 0xea
0000            308   _ADWINT         BIT 0xeb
0000            309   _ADBUSY         BIT 0xec
0000            310   _ADINT          BIT 0xed
0000            311   _IPOEN          BIT 0xee
0000            312   _ADEN           BIT 0xef
0000            313   _B_0            BIT 0xf0
0000            314   _B_1            BIT 0xf1
0000            315   _B_2            BIT 0xf2
0000            316   _B_3            BIT 0xf3
0000            317   _B_4            BIT 0xf4
0000            318   _B_5            BIT 0xf5
0000            319   _B_6            BIT 0xf6
0000            320   _B_7            BIT 0xf7
0000            321   _C0FIF          BIT 0xe8
0000            322   _C0RIF          BIT 0xe9
0000            323   _C1FIF          BIT 0xea
0000            324   _C1RIF          BIT 0xeb
0000            325   _C2FIF          BIT 0xec
0000            326   _C2RIF          BIT 0xed
0000            327   _C3FIF          BIT 0xee
0000            328   _C3RIF          BIT 0xef
0000            329   _D1SRC0         BIT 0x88
0000            330   _D1SRC1         BIT 0x89
0000            331   _D1AMEN         BIT 0x8a
0000            332   _D01REFSL       BIT 0x8b
0000            333   _D3SRC0         BIT 0x8c
0000            334   _D3SRC1         BIT 0x8d
0000            335   _D3AMEN         BIT 0x8e
0000            336   _D23REFSL       BIT 0x8f
0000            337   _D0UDIS         BIT 0x98
0000            338   _D1UDIS         BIT 0x99
0000            339   _D2UDIS         BIT 0x9a
0000            340   _D3UDIS         BIT 0x9b
0000            341   _EX0            BIT 0xa8
0000            342   _ET0            BIT 0xa9
0000            343   _EX1            BIT 0xaa
0000            344   _ET1            BIT 0xab
0000            345   _ES0            BIT 0xac
0000            346   _ET2            BIT 0xad
0000            347   _ESPI0          BIT 0xae
0000            348   _EA             BIT 0xaf
0000            349   _PX0            BIT 0xb8
0000            350   _PT0            BIT 0xb9
0000            351   _PX1            BIT 0xba
0000            352   _PT1            BIT 0xbb
0000            353   _PS0            BIT 0xbc
0000            354   _PT2            BIT 0xbd
0000            355   _PSPI0          BIT 0xbe
0000            356   _P0_0           BIT 0x80
0000            357   _P0_1           BIT 0x81
0000            358   _P0_2           BIT 0x82
0000            359   _P0_3           BIT 0x83
0000            360   _P0_4           BIT 0x84
0000            361   _P0_5           BIT 0x85
0000            362   _P0_6           BIT 0x86
0000            363   _P0_7           BIT 0x87
0000            364   _P1_0           BIT 0x90
0000            365   _P1_1           BIT 0x91
0000            366   _P1_2           BIT 0x92
0000            367   _P1_3           BIT 0x93
0000            368   _P1_4           BIT 0x94
0000            369   _P1_5           BIT 0x95
0000            370   _P1_6           BIT 0x96
0000            371   _P1_7           BIT 0x97
0000            372   _P2_0           BIT 0xa0
0000            373   _P2_1           BIT 0xa1
0000            374   _P2_2           BIT 0xa2
0000            375   _P2_3           BIT 0xa3
0000            376   _P2_4           BIT 0xa4
0000            377   _P2_5           BIT 0xa5
0000            378   _P2_6           BIT 0xa6
0000            379   _P3_0           BIT 0xb0
0000            380   _P3_1           BIT 0xb1
0000            381   _P3_2           BIT 0xb2
0000            382   _P3_3           BIT 0xb3
0000            383   _P3_4           BIT 0xb4
0000            384   _P3_7           BIT 0xb7
0000            385   _CCF0           BIT 0xd8
0000            386   _CCF1           BIT 0xd9
0000            387   _CCF2           BIT 0xda
0000            388   _CCF3           BIT 0xdb
0000            389   _CCF4           BIT 0xdc
0000            390   _CCF5           BIT 0xdd
0000            391   _CR             BIT 0xde
0000            392   _CF             BIT 0xdf
0000            393   _PARITY         BIT 0xd0
0000            394   _F1             BIT 0xd1
0000            395   _OV             BIT 0xd2
0000            396   _RS0            BIT 0xd3
0000            397   _RS1            BIT 0xd4
0000            398   _F0             BIT 0xd5
0000            399   _AC             BIT 0xd6
0000            400   _CY             BIT 0xd7
0000            401   _RI             BIT 0x98
0000            402   _TI             BIT 0x99
0000            403   _RB8            BIT 0x9a
0000            404   _TB8            BIT 0x9b
0000            405   _REN            BIT 0x9c
0000            406   _CE             BIT 0x9d
0000            407   _SMODE          BIT 0x9e
0000            408   _RI1            BIT 0xc8
0000            409   _TI1            BIT 0xc9
0000            410   _RBX1           BIT 0xca
0000            411   _TBX1           BIT 0xcb
0000            412   _REN1           BIT 0xcc
0000            413   _PERR1          BIT 0xcd
0000            414   _OVR1           BIT 0xce
0000            415   _SI             BIT 0xc0
0000            416   _ACK            BIT 0xc1
0000            417   _ARBLOST        BIT 0xc2
0000            418   _ACKRQ          BIT 0xc3
0000            419   _STO            BIT 0xc4
0000            420   _STA            BIT 0xc5
0000            421   _TXMODE         BIT 0xc6
0000            422   _MASTER         BIT 0xc7
0000            423   _SPIEN          BIT 0xf8
0000            424   _TXNF           BIT 0xf9
0000            425   _NSSMD0         BIT 0xfa
0000            426   _NSSMD1         BIT 0xfb
0000            427   _RXOVRN         BIT 0xfc
0000            428   _MODF           BIT 0xfd
0000            429   _WCOL           BIT 0xfe
0000            430   _SPIF           BIT 0xff
0000            431   _IT0            BIT 0x88
0000            432   _IE0            BIT 0x89
0000            433   _IT1            BIT 0x8a
0000            434   _IE1            BIT 0x8b
0000            435   _TR0            BIT 0x8c
0000            436   _TF0            BIT 0x8d
0000            437   _TR1            BIT 0x8e
0000            438   _TF1            BIT 0x8f
0000            439   _T2XCLK0        BIT 0xc8
0000            440   _T2XCLK1        BIT 0xc9
0000            441   _TR2            BIT 0xca
0000            442   _T2SPLIT        BIT 0xcb
0000            443   _TF2CEN         BIT 0xcc
0000            444   _TF2LEN         BIT 0xcd
0000            445   _TF2L           BIT 0xce
0000            446   _TF2H           BIT 0xcf
0000            447   _T4XCLK0        BIT 0x98
0000            448   _T4XCLK1        BIT 0x99
0000            449   _TR4            BIT 0x9a
0000            450   _T4SPLIT        BIT 0x9b
0000            451   _TF4CEN         BIT 0x9c
0000            452   _TF4LEN         BIT 0x9d
0000            453   _TF4L           BIT 0x9e
0000            454   _TF4H           BIT 0x9f
0000            455   _T5XCLK0        BIT 0xc0
0000            456   _T5XCLK1        BIT 0xc1
0000            457   _TR5            BIT 0xc2
0000            458   _T5SPLIT        BIT 0xc3
0000            459   _TF5CEN         BIT 0xc4
0000            460   _TF5LEN         BIT 0xc5
0000            461   _TF5L           BIT 0xc6
0000            462   _TF5H           BIT 0xc7
0000            463   _RIE            BIT 0xd8
0000            464   _RXTO0          BIT 0xd9
0000            465   _RXTO1          BIT 0xda
0000            466   _RFRQ           BIT 0xdb
0000            467   _TIE            BIT 0xdc
0000            468   _TXHOLD         BIT 0xdd
0000            469   _TXNF1          BIT 0xde
0000            470   _TFRQ           BIT 0xdf
0000            471   ;--------------------------------------------------------
0000            472   ; overlayable register banks
0000            473   ;--------------------------------------------------------
0000            474            rbank0 segment data overlay
0000            475   ;--------------------------------------------------------
0000            476   ; internal ram data
0000            477   ;--------------------------------------------------------
0000            478            rseg R_DSEG
0000            479   ;--------------------------------------------------------
0000            480   ; overlayable items in internal ram 
0000            481   ;--------------------------------------------------------
0000            482            rseg    R_OSEG
0000            483            rseg    R_OSEG
0000            484   ;--------------------------------------------------------
0000            485   ; indirectly addressable internal ram data
0000            486   ;--------------------------------------------------------
0000            487            rseg R_ISEG
0000            488   ;--------------------------------------------------------
0000            489   ; absolute internal ram data
0000            490   ;--------------------------------------------------------
0000            491            DSEG
0000            492   ;--------------------------------------------------------
0000            493   ; bit data
0000            494   ;--------------------------------------------------------
0000            495            rseg R_BSEG
0000            496   ;--------------------------------------------------------
0000            497   ; paged external ram data
0000            498   ;--------------------------------------------------------
0000            499            rseg R_PSEG
0000            500   ;--------------------------------------------------------
0000            501   ; external ram data
0000            502   ;--------------------------------------------------------
0000            503            rseg R_XSEG
0000            504   ;--------------------------------------------------------
0000            505   ; absolute external ram data
0000            506   ;--------------------------------------------------------
0000            507            XSEG
0000            508   ;--------------------------------------------------------
0000            509   ; external initialized ram data
0000            510   ;--------------------------------------------------------
0000            511            rseg R_IXSEG
0000            512            rseg R_HOME
0000            513            rseg R_GSINIT
0000            514            rseg R_CSEG
0000            515   ;--------------------------------------------------------
0000            516   ; Reset entry point and interrupt vectors
0000            517   ;--------------------------------------------------------
0000            518            CSEG at 0x0000
0000 020000     519            ljmp    _crt0
002B            520            CSEG at 0x002b
002B 020000     521            ljmp    _Timer2_ISR
002E            522   ;--------------------------------------------------------
002E            523   ; global & static initialisations
002E            524   ;--------------------------------------------------------
0000            525            rseg R_HOME
0000            526            rseg R_GSINIT
0000            527            rseg R_GSINIT
0000            528   ;--------------------------------------------------------
0000            529   ; data variables initialization
0000            530   ;--------------------------------------------------------
0000            531            rseg R_DINIT
0000            532            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            533   ;--------------------------------------------------------
0000            534   ; code
0000            535   ;--------------------------------------------------------
0000            536            rseg R_CSEG
0000            537   ;------------------------------------------------------------
0000            538   ;Allocation info for local variables in function '_c51_external_startup'
0000            539   ;------------------------------------------------------------
0000            540   ;------------------------------------------------------------
0000            541   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:32: char _c51_external_startup (void)
0000            542   ;        -----------------------------------------
0000            543   ;         function _c51_external_startup
0000            544   ;        -----------------------------------------
0000            545   __c51_external_startup:
0000            546            using   0
0000            547   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:35: SFRPAGE = 0x00;
0000 75A700     548            mov     _SFRPAGE,#0x00
0003            549   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:36: WDTCN = 0xDE; //First key
0003 7597DE     550            mov     _WDTCN,#0xDE
0006            551   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:37: WDTCN = 0xAD; //Second key
0006 7597AD     552            mov     _WDTCN,#0xAD
0009            553   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:39: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     554            mov     _VDM0CN,#0x80
000C            555   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:40: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     556            mov     _RSTSRC,#0x06
000F            557   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:47: SFRPAGE = 0x10;
000F 75A710     558            mov     _SFRPAGE,#0x10
0012            559   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:48: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     560            mov     _PFE0CN,#0x20
0015            561   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:49: SFRPAGE = 0x00;
0015 75A700     562            mov     _SFRPAGE,#0x00
0018            563   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:70: CLKSEL = 0x00;
0018 75A900     564            mov     _CLKSEL,#0x00
001B            565   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:71: CLKSEL = 0x00;
001B 75A900     566            mov     _CLKSEL,#0x00
001E            567   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:72: while ((CLKSEL & 0x80) == 0);
001E            568   L002001?:
001E E5A9       569            mov     a,_CLKSEL
0020 30E728     570            jnb     acc.7,L002001?
0023            571   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:73: CLKSEL = 0x03;
0023 75A903     572            mov     _CLKSEL,#0x03
0026            573   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:74: CLKSEL = 0x03;
0026 75A903     574            mov     _CLKSEL,#0x03
0029            575   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:75: while ((CLKSEL & 0x80) == 0);
0029            576   L002004?:
0029 E5A9       577            mov     a,_CLKSEL
002B 30E7A8     578            jnb     acc.7,L002004?
002E            579   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:81: P0MDOUT|=0b_1100_0010;
002E 43A4C2     580            orl     _P0MDOUT,#0xC2
0031            581   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:82: P1MDOUT|=0b_1111_1111;
0031 E5A5       582            mov     a,_P1MDOUT
0033 75A5FF     583            mov     _P1MDOUT,#0xFF
0036            584   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:83: P2MDOUT|=0b_0000_0001;
0036 43A601     585            orl     _P2MDOUT,#0x01
0039            586   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:85: XBR0     = 0x00;                     
0039 75E100     587            mov     _XBR0,#0x00
003C            588   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:86: XBR1     = 0X00;
003C 75E200     589            mov     _XBR1,#0x00
003F            590   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:87: XBR2     = 0x40; // Enable crossbar and weak pull-ups
003F 75E340     591            mov     _XBR2,#0x40
0042            592   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:90: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
0042 75C800     593            mov     _TMR2CN0,#0x00
0045            594   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:91: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
0045 438E10     595            orl     _CKCON0,#0x10
0048            596   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:92: TMR2RL=(0x10000L-(SYSCLK/(2*TIMER_2_FREQ))); // Initialize reload value
0048 75CA20     597            mov     _TMR2RL,#0x20
004B 75CBD1     598            mov     (_TMR2RL >> 8),#0xD1
004E            599   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:93: TMR2=0xffff;   // Set to reload immediately
004E 75CEFF     600            mov     _TMR2,#0xFF
0051 75CFFF     601            mov     (_TMR2 >> 8),#0xFF
0054            602   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:94: ET2=1;         // Enable Timer2 interrupts
0054 D2AD       603            setb    _ET2
0056            604   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:95: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
0056 D2CA       605            setb    _TR2
0058            606   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:97: EA=1; // Enable interrupts
0058 D2AF       607            setb    _EA
005A            608   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:99: return 0;
005A 758200     609            mov     dpl,#0x00
005D 22         610            ret
005E            611   ;------------------------------------------------------------
005E            612   ;Allocation info for local variables in function 'Timer2_ISR'
005E            613   ;------------------------------------------------------------
005E            614   ;------------------------------------------------------------
005E            615   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:103: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
005E            616   ;        -----------------------------------------
005E            617   ;         function Timer2_ISR
005E            618   ;        -----------------------------------------
005E            619   _Timer2_ISR:
005E            620   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:105: SFRPAGE=0x0;              
005E 75A700     621            mov     _SFRPAGE,#0x00
0061            622   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:106: TF2H = 0; // Clear Timer2 interrupt flag
0061 C2CF       623            clr     _TF2H
0063            624   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:107: TIMER_OUT_2=!TIMER_OUT_2;
0063 B296       625            cpl     _P1_6
0065 32         626            reti
0066            627   ;        eliminated unneeded push/pop psw
0066            628   ;        eliminated unneeded push/pop dpl
0066            629   ;        eliminated unneeded push/pop dph
0066            630   ;        eliminated unneeded push/pop b
0066            631   ;        eliminated unneeded push/pop acc
0066            632   ;------------------------------------------------------------
0066            633   ;Allocation info for local variables in function 'mapFrequencySpeak'
0066            634   ;------------------------------------------------------------
0066            635   ;difference                Allocated to registers r2 r3 r4 r5 
0066            636   ;speaker_freq              Allocated to registers 
0066            637   ;------------------------------------------------------------
0066            638   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:111: unsigned int mapFrequencySpeak(unsigned long int difference)
0066            639   ;        -----------------------------------------
0066            640   ;         function mapFrequencySpeak
0066            641   ;        -----------------------------------------
0066            642   _mapFrequencySpeak:
0066 AA82       643            mov     r2,dpl
0068 AB83       644            mov     r3,dph
006A ACF0       645            mov     r4,b
006C FD         646            mov     r5,a
006D            647   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:117: if((difference>=500) && (difference<700)){ // speaker plays 3000 freq
006D C3         648            clr     c
006E EA         649            mov     a,r2
006F 94F4       650            subb    a,#0xF4
0071 EB         651            mov     a,r3
0072 9401       652            subb    a,#0x01
0074 EC         653            mov     a,r4
0075 9400       654            subb    a,#0x00
0077 ED         655            mov     a,r5
0078 9400       656            subb    a,#0x00
007A 4000       657            jc      L004020?
007C EA         658            mov     a,r2
007D 94BC       659            subb    a,#0xBC
007F EB         660            mov     a,r3
0080 9402       661            subb    a,#0x02
0082 EC         662            mov     a,r4
0083 9400       663            subb    a,#0x00
0085 ED         664            mov     a,r5
0086 9400       665            subb    a,#0x00
0088 5000       666            jnc     L004020?
008A            667   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:120: TR2=0; // Stop timer 2
008A C2CA       668            clr     _TR2
008C            669   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:121: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
008C 75CA60     670            mov     _TMR2RL,#0x60
008F 75CB73     671            mov     (_TMR2RL >> 8),#0x73
0092            672   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:122: TR2=1; // Start timer 2
0092 D2CA       673            setb    _TR2
0094            674   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:123: difference =750;
0094 22         675            ret
0095            676   L004020?:
0095            677   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:126: else if((difference>=700) && (difference<800) ){
0095 C3         678            clr     c
0096 EA         679            mov     a,r2
0097 94BC       680            subb    a,#0xBC
0099 EB         681            mov     a,r3
009A 9402       682            subb    a,#0x02
009C EC         683            mov     a,r4
009D 9400       684            subb    a,#0x00
009F ED         685            mov     a,r5
00A0 9400       686            subb    a,#0x00
00A2 4000       687            jc      L004016?
00A4 EA         688            mov     a,r2
00A5 9420       689            subb    a,#0x20
00A7 EB         690            mov     a,r3
00A8 9403       691            subb    a,#0x03
00AA EC         692            mov     a,r4
00AB 9400       693            subb    a,#0x00
00AD ED         694            mov     a,r5
00AE 9400       695            subb    a,#0x00
00B0 5000       696            jnc     L004016?
00B2            697   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:128: TR2=0; // Stop timer 2
00B2 C2CA       698            clr     _TR2
00B4            699   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:129: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
00B4 75CAB0     700            mov     _TMR2RL,#0xB0
00B7 75CBB9     701            mov     (_TMR2RL >> 8),#0xB9
00BA            702   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:130: TR2=1; // Start timer 2
00BA D2CA       703            setb    _TR2
00BC 22         704            ret
00BD            705   L004016?:
00BD            706   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:133: else if((difference>=800) && (difference<900) ){
00BD C3         707            clr     c
00BE EA         708            mov     a,r2
00BF 9420       709            subb    a,#0x20
00C1 EB         710            mov     a,r3
00C2 9403       711            subb    a,#0x03
00C4 EC         712            mov     a,r4
00C5 9400       713            subb    a,#0x00
00C7 ED         714            mov     a,r5
00C8 9400       715            subb    a,#0x00
00CA 4000       716            jc      L004012?
00CC EA         717            mov     a,r2
00CD 9484       718            subb    a,#0x84
00CF EB         719            mov     a,r3
00D0 9403       720            subb    a,#0x03
00D2 EC         721            mov     a,r4
00D3 9400       722            subb    a,#0x00
00D5 ED         723            mov     a,r5
00D6 9400       724            subb    a,#0x00
00D8 5000       725            jnc     L004012?
00DA            726   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:135: TR2=0; // Stop timer 2
00DA C2CA       727            clr     _TR2
00DC            728   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:136: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
00DC 75CA20     729            mov     _TMR2RL,#0x20
00DF 75CBD1     730            mov     (_TMR2RL >> 8),#0xD1
00E2            731   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:137: TR2=1; // Start timer 2
00E2 D2CA       732            setb    _TR2
00E4 22         733            ret
00E5            734   L004012?:
00E5            735   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:139: else if((difference>=900) && (difference<1000) ){
00E5 C3         736            clr     c
00E6 EA         737            mov     a,r2
00E7 9484       738            subb    a,#0x84
00E9 EB         739            mov     a,r3
00EA 9403       740            subb    a,#0x03
00EC EC         741            mov     a,r4
00ED 9400       742            subb    a,#0x00
00EF ED         743            mov     a,r5
00F0 9400       744            subb    a,#0x00
00F2 4000       745            jc      L004008?
00F4 EA         746            mov     a,r2
00F5 94E8       747            subb    a,#0xE8
00F7 EB         748            mov     a,r3
00F8 9403       749            subb    a,#0x03
00FA EC         750            mov     a,r4
00FB 9400       751            subb    a,#0x00
00FD ED         752            mov     a,r5
00FE 9400       753            subb    a,#0x00
0100 5000       754            jnc     L004008?
0102            755   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:141: TR2=0; // Stop timer 2
0102 C2CA       756            clr     _TR2
0104            757   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:142: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
0104 75CAD8     758            mov     _TMR2RL,#0xD8
0107 75CBDC     759            mov     (_TMR2RL >> 8),#0xDC
010A            760   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:143: TR2=1; // Start timer 2
010A D2CA       761            setb    _TR2
010C 22         762            ret
010D            763   L004008?:
010D            764   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:145: else if((difference>=1000) && (difference<1100) ){
010D C3         765            clr     c
010E EA         766            mov     a,r2
010F 94E8       767            subb    a,#0xE8
0111 EB         768            mov     a,r3
0112 9403       769            subb    a,#0x03
0114 EC         770            mov     a,r4
0115 9400       771            subb    a,#0x00
0117 ED         772            mov     a,r5
0118 9400       773            subb    a,#0x00
011A 4000       774            jc      L004004?
011C EA         775            mov     a,r2
011D 944C       776            subb    a,#0x4C
011F EB         777            mov     a,r3
0120 9404       778            subb    a,#0x04
0122 EC         779            mov     a,r4
0123 9400       780            subb    a,#0x00
0125 ED         781            mov     a,r5
0126 9400       782            subb    a,#0x00
0128 5000       783            jnc     L004004?
012A            784   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:147: TR2=0; // Stop timer 2
012A C2CA       785            clr     _TR2
012C            786   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:148: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
012C 75CAE0     787            mov     _TMR2RL,#0xE0
012F 75CBE3     788            mov     (_TMR2RL >> 8),#0xE3
0132            789   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:149: TR2=1; // Start timer 2
0132 D2CA       790            setb    _TR2
0134 22         791            ret
0135            792   L004004?:
0135            793   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:151: else if(difference>=1100){
0135 C3         794            clr     c
0136 EA         795            mov     a,r2
0137 944C       796            subb    a,#0x4C
0139 EB         797            mov     a,r3
013A 9404       798            subb    a,#0x04
013C EC         799            mov     a,r4
013D 9400       800            subb    a,#0x00
013F ED         801            mov     a,r5
0140 9400       802            subb    a,#0x00
0142 4000       803            jc      L004023?
0144            804   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:153: TR2=0; // Stop timer 2
0144 C2CA       805            clr     _TR2
0146            806   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:154: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
0146 75CA90     807            mov     _TMR2RL,#0x90
0149 75CBE8     808            mov     (_TMR2RL >> 8),#0xE8
014C            809   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:155: TR2=1; // Start timer 2
014C D2CA       810            setb    _TR2
014E            811   L004023?:
014E 22         812            ret
014F            813   ;------------------------------------------------------------
014F            814   ;Allocation info for local variables in function 'delay'
014F            815   ;------------------------------------------------------------
014F            816   ;x                         Allocated to registers r2 r3 
014F            817   ;j                         Allocated to registers r4 
014F            818   ;------------------------------------------------------------
014F            819   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:166: void delay (unsigned int x)
014F            820   ;        -----------------------------------------
014F            821   ;         function delay
014F            822   ;        -----------------------------------------
014F            823   _delay:
014F AA82       824            mov     r2,dpl
0151 AB83       825            mov     r3,dph
0153            826   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:169: while(--x)
0153            827   L005001?:
0153 1A         828            dec     r2
0154 BAFF68     829            cjne    r2,#0xff,L005014?
0157 1B         830            dec     r3
0158            831   L005014?:
0158 EA         832            mov     a,r2
0159 4B         833            orl     a,r3
015A 6000       834            jz      L005007?
015C            835   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:171: for(j=0; j<100; j++);
015C 7C64       836            mov     r4,#0x64
015E            837   L005006?:
015E DCE8       838            djnz    r4,L005006?
0160 8000       839            sjmp    L005001?
0162            840   L005007?:
0162 22         841            ret
0163            842   ;------------------------------------------------------------
0163            843   ;Allocation info for local variables in function 'main'
0163            844   ;------------------------------------------------------------
0163            845   ;j                         Allocated with name '_main_j_1_59'
0163            846   ;test_freq                 Allocated to registers 
0163            847   ;speaker_freq              Allocated to registers 
0163            848   ;difference                Allocated to registers r2 r3 r4 r5 
0163            849   ;------------------------------------------------------------
0163            850   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:175: void main (void)
0163            851   ;        -----------------------------------------
0163            852   ;         function main
0163            853   ;        -----------------------------------------
0163            854   _main:
0163            855   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:182: difference = 600;
0163 7A58       856            mov     r2,#0x58
0165 7B02       857            mov     r3,#0x02
0167 7C00       858            mov     r4,#0x00
0169 7D00       859            mov     r5,#0x00
016B            860   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:184: while(1)
016B            861   L006025?:
016B            862   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:190: if((difference>=500) && (difference<700)){ // speaker plays 3000 freq
016B C3         863            clr     c
016C EA         864            mov     a,r2
016D 94F4       865            subb    a,#0xF4
016F EB         866            mov     a,r3
0170 9401       867            subb    a,#0x01
0172 EC         868            mov     a,r4
0173 9400       869            subb    a,#0x00
0175 ED         870            mov     a,r5
0176 9400       871            subb    a,#0x00
0178 4000       872            jc      L006021?
017A EA         873            mov     a,r2
017B 94BC       874            subb    a,#0xBC
017D EB         875            mov     a,r3
017E 9402       876            subb    a,#0x02
0180 EC         877            mov     a,r4
0181 9400       878            subb    a,#0x00
0183 ED         879            mov     a,r5
0184 9400       880            subb    a,#0x00
0186 5000       881            jnc     L006021?
0188            882   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:193: TR2=0; // Stop timer 2
0188 C2CA       883            clr     _TR2
018A            884   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:194: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
018A 75CA60     885            mov     _TMR2RL,#0x60
018D 75CB73     886            mov     (_TMR2RL >> 8),#0x73
0190            887   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:195: TR2=1; // Start timer 2
0190 D2CA       888            setb    _TR2
0192            889   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:196: delay(50000);
0192 90C350     890            mov     dptr,#0xC350
0195 120000     891            lcall   _delay
0198            892   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:197: difference =750;
0198 7AEE       893            mov     r2,#0xEE
019A 7B02       894            mov     r3,#0x02
019C 7C00       895            mov     r4,#0x00
019E 7D00       896            mov     r5,#0x00
01A0 8000       897            sjmp    L006025?
01A2            898   L006021?:
01A2            899   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:200: else if((difference>=700) && (difference<800) ){
01A2 C3         900            clr     c
01A3 EA         901            mov     a,r2
01A4 94BC       902            subb    a,#0xBC
01A6 EB         903            mov     a,r3
01A7 9402       904            subb    a,#0x02
01A9 EC         905            mov     a,r4
01AA 9400       906            subb    a,#0x00
01AC ED         907            mov     a,r5
01AD 9400       908            subb    a,#0x00
01AF 4000       909            jc      L006017?
01B1 EA         910            mov     a,r2
01B2 9420       911            subb    a,#0x20
01B4 EB         912            mov     a,r3
01B5 9403       913            subb    a,#0x03
01B7 EC         914            mov     a,r4
01B8 9400       915            subb    a,#0x00
01BA ED         916            mov     a,r5
01BB 9400       917            subb    a,#0x00
01BD 5000       918            jnc     L006017?
01BF            919   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:202: TR2=0; // Stop timer 2
01BF C2CA       920            clr     _TR2
01C1            921   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:203: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
01C1 75CAB0     922            mov     _TMR2RL,#0xB0
01C4 75CBB9     923            mov     (_TMR2RL >> 8),#0xB9
01C7            924   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:204: TR2=1; // Start timer 2
01C7 D2CA       925            setb    _TR2
01C9            926   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:205: delay(50000);
01C9 90C350     927            mov     dptr,#0xC350
01CC 120000     928            lcall   _delay
01CF            929   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:206: difference =850;
01CF 7A52       930            mov     r2,#0x52
01D1 7B03       931            mov     r3,#0x03
01D3 7C00       932            mov     r4,#0x00
01D5 7D00       933            mov     r5,#0x00
01D7 8000       934            sjmp    L006025?
01D9            935   L006017?:
01D9            936   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:209: else if((difference>=800) && (difference<900) ){
01D9 C3         937            clr     c
01DA EA         938            mov     a,r2
01DB 9420       939            subb    a,#0x20
01DD EB         940            mov     a,r3
01DE 9403       941            subb    a,#0x03
01E0 EC         942            mov     a,r4
01E1 9400       943            subb    a,#0x00
01E3 ED         944            mov     a,r5
01E4 9400       945            subb    a,#0x00
01E6 4000       946            jc      L006013?
01E8 EA         947            mov     a,r2
01E9 9484       948            subb    a,#0x84
01EB EB         949            mov     a,r3
01EC 9403       950            subb    a,#0x03
01EE EC         951            mov     a,r4
01EF 9400       952            subb    a,#0x00
01F1 ED         953            mov     a,r5
01F2 9400       954            subb    a,#0x00
01F4 5000       955            jnc     L006013?
01F6            956   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:211: TR2=0; // Stop timer 2
01F6 C2CA       957            clr     _TR2
01F8            958   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:212: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
01F8 75CA20     959            mov     _TMR2RL,#0x20
01FB 75CBD1     960            mov     (_TMR2RL >> 8),#0xD1
01FE            961   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:213: TR2=1; // Start timer 2
01FE D2CA       962            setb    _TR2
0200 020000     963            ljmp    L006025?
0203            964   L006013?:
0203            965   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:215: else if((difference>=900) && (difference<1000) ){
0203 C3         966            clr     c
0204 EA         967            mov     a,r2
0205 9484       968            subb    a,#0x84
0207 EB         969            mov     a,r3
0208 9403       970            subb    a,#0x03
020A EC         971            mov     a,r4
020B 9400       972            subb    a,#0x00
020D ED         973            mov     a,r5
020E 9400       974            subb    a,#0x00
0210 4000       975            jc      L006009?
0212 EA         976            mov     a,r2
0213 94E8       977            subb    a,#0xE8
0215 EB         978            mov     a,r3
0216 9403       979            subb    a,#0x03
0218 EC         980            mov     a,r4
0219 9400       981            subb    a,#0x00
021B ED         982            mov     a,r5
021C 9400       983            subb    a,#0x00
021E 5000       984            jnc     L006009?
0220            985   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:217: TR2=0; // Stop timer 2
0220 C2CA       986            clr     _TR2
0222            987   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:218: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
0222 75CAD8     988            mov     _TMR2RL,#0xD8
0225 75CBDC     989            mov     (_TMR2RL >> 8),#0xDC
0228            990   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:219: TR2=1; // Start timer 2
0228 D2CA       991            setb    _TR2
022A 020000     992            ljmp    L006025?
022D            993   L006009?:
022D            994   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:221: else if((difference>=1000) && (difference<1100) ){
022D C3         995            clr     c
022E EA         996            mov     a,r2
022F 94E8       997            subb    a,#0xE8
0231 EB         998            mov     a,r3
0232 9403       999            subb    a,#0x03
0234 EC        1000            mov     a,r4
0235 9400      1001            subb    a,#0x00
0237 ED        1002            mov     a,r5
0238 9400      1003            subb    a,#0x00
023A 4000      1004            jc      L006005?
023C EA        1005            mov     a,r2
023D 944C      1006            subb    a,#0x4C
023F EB        1007            mov     a,r3
0240 9404      1008            subb    a,#0x04
0242 EC        1009            mov     a,r4
0243 9400      1010            subb    a,#0x00
0245 ED        1011            mov     a,r5
0246 9400      1012            subb    a,#0x00
0248 5000      1013            jnc     L006005?
024A           1014   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:223: TR2=0; // Stop timer 2
024A C2CA      1015            clr     _TR2
024C           1016   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:224: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
024C 75CAE0    1017            mov     _TMR2RL,#0xE0
024F 75CBE3    1018            mov     (_TMR2RL >> 8),#0xE3
0252           1019   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:225: TR2=1; // Start timer 2
0252 D2CA      1020            setb    _TR2
0254 020000    1021            ljmp    L006025?
0257           1022   L006005?:
0257           1023   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:227: else if(difference>=1100){
0257 C3        1024            clr     c
0258 EA        1025            mov     a,r2
0259 944C      1026            subb    a,#0x4C
025B EB        1027            mov     a,r3
025C 9404      1028            subb    a,#0x04
025E EC        1029            mov     a,r4
025F 9400      1030            subb    a,#0x00
0261 ED        1031            mov     a,r5
0262 9400      1032            subb    a,#0x00
0264 4000      1033            jc      L006002?
0266           1034   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:229: TR2=0; // Stop timer 2
0266 C2CA      1035            clr     _TR2
0268           1036   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:230: TMR2RL=0x10000L-(SYSCLK/(2*speaker_freq)); // Change reload value for new frequency
0268 75CA90    1037            mov     _TMR2RL,#0x90
026B 75CBE8    1038            mov     (_TMR2RL >> 8),#0xE8
026E           1039   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:231: TR2=1; // Start timer 2
026E D2CA      1040            setb    _TR2
0270 020000    1041            ljmp    L006025?
0273           1042   L006002?:
0273           1043   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\B8_Project2\speaktest.c:235: delay(50000);
0273 90C350    1044            mov     dptr,#0xC350
0276 C002      1045            push    ar2
0278 C003      1046            push    ar3
027A C004      1047            push    ar4
027C C005      1048            push    ar5
027E 120000    1049            lcall   _delay
0281 D005      1050            pop     ar5
0283 D004      1051            pop     ar4
0285 D003      1052            pop     ar3
0287 D002      1053            pop     ar2
0289 020000    1054            ljmp    L006025?
028C           1055            rseg R_CSEG
028C           1056   
0000           1057            rseg R_XINIT
0000           1058   
0000           1059            rseg R_CONST
0000           1060   
002E           1061            CSEG
002E           1062   
002E           1063   end
